{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/image-service.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleInput","event","setState","target","value","handleFormSubmit","preventDefault","props","onFormSubmit","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","onImageClick","src","handleImgClick","webformatURL","alt","largeImageURL","onClick","ImageGallery","images","map","id","api","fetchImages","currentQuery","currentPage","fetch","then","response","ok","json","Promise","reject","Error","Button","onBtn","modalRoot","document","querySelector","Modal","handleEscape","code","toggleModal","handleBackdrop","currentTarget","window","addEventListener","removeEventListener","createPortal","children","Status","App","status","showModal","handlQuery","setTimeout","newImages","hits","prevState","concat","finally","scrollTo","top","documentElement","scrollHeight","behavior","handleMoreClick","bigImg","prevProps","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.280b496f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: '' };\r\n\r\n  static propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired,\r\n  };\r\n    \r\n  handleInput = event => {\r\n      this.setState({ query: event.target.value });\r\n  };\r\n    \r\n  handleFormSubmit = event => {\r\n    const { query } = this.state;\r\n    event.preventDefault();\r\n\r\n    this.props.onFormSubmit(query);\r\n\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n             <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleInput}\r\n            value={this.state.query}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nclass ImageGalleryItem extends Component {\r\n  \r\n  state = {};\r\n  onImageClick = src => {\r\n    this.props.handleImgClick(src);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n        <img\r\n          src={this.props.webformatURL}\r\n          alt=\"\"\r\n          className=\"ImageGalleryItem-image\"\r\n          data-source={this.props.largeImageURL}\r\n          onClick={() => this.onImageClick(this.props.largeImageURL)}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport './ImageGallery.css';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, handleImgClick }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        key={id}\r\n        handleImgClick={handleImgClick}\r\n        largeImageURL={largeImageURL}\r\n        webformatURL={webformatURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;","function fetchImages(currentQuery, currentPage = '1') {\r\n  return fetch(`https://pixabay.com/api/?q=${currentQuery}&page=${currentPage}&key=21925746-60d8df6678e20ce47ee1562cb&image_type=photo&orientation=horizontal&per_page=12`).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error(`Нет изображений по запросу ${currentQuery}`));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onBtn }) => (\r\n  <div className=\"conteinerBtn\"><button className=\"Button\" type=\"button\" onClick={onBtn}>\r\n    Load more\r\n  </button>\r\n    </div>\r\n);\r\n\r\nButton.propTypes = {\r\n  onBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\n\r\nimport  './Modal.css';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleEscape);\r\n  }\r\n\r\n  handleEscape = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleEscape);\r\n  }\r\n\r\n  handleBackdrop = event => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className='Overlay' onClick={this.handleBackdrop}>\r\n        <div className='Modal' >{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport api from './services/image-service';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n};\n\nclass App extends Component {\n  state = {\n    images: [],\n    status: Status.IDLE,\n    currentQuery: '',\n    currentPage: 1,\n    showModal: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentQuery !== this.state.currentQuery) {\n      this.handlQuery();\n    }\n  }\n\n  onFormSubmit = query => {\n    this.setState({ currentQuery: query, currentPage: 1, images: [] });\n  };\n  handlQuery = () => {\n    this.setState({ status: Status.PENDING });\n    setTimeout(() => {\n          api\n      .fetchImages(this.state.currentQuery, this.state.currentPage)\n      .then(response => {\n        \n        const newImages = response.hits.map(({ id, webformatURL, largeImageURL }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n        }));\n\n        this.setState(prevState => ({\n          currentPage: prevState.currentPage + 1,\n          images: [...prevState.images].concat(newImages),\n        }));\n\n      })\n      .finally(() => {\n        this.setState({ status: Status.RESOLVED });\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n    }, 2000);\n  }\n  \n  handleMoreClick = () => {\n    this.handlQuery();\n  };\n  handleImgClick = src => {\n    this.setState({ bigImg: src, showModal: true });\n  };\n  toggleModal = event => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  render() {\n    const { status, images, showModal, bigImg } = this.state;\n    return (\n      <>\n        <Searchbar onFormSubmit={this.onFormSubmit} />\n        {status === 'pending' && images.length === 0\n          ?\n          (<Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} className=\"conteiner\"/>)\n          :\n          (<>\n            <ImageGallery images={this.state.images} handleImgClick={this.handleImgClick}/>\n          </>)\n        }\n\n        {status === 'pending' && images.length > 0 && (\n            <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} className=\"conteiner\"/>\n        )}\n        {status=== 'resolved' && (\n            <Button onBtn={this.handleMoreClick} />\n        )}\n        {showModal && (\n          <Modal toggleModal={this.toggleModal}>\n            <img src={bigImg} alt=\"\" />\n          </Modal>\n        )}\n\n        \n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}